// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package fball

import (
	"context"
	"encoding/json"
	"time"
)

func (c Corpus) getTimezoneResponse(
	ctx context.Context, endpoint string, max int, rng Range, policy refreshPolicy,
	params URLQueryStringer) ([]TimezoneResponse, error) {
	// Query the countries from the database.
	resp := []TimezoneResponse{}
	err := c.handle.Query(ctx, endpoint, params, max, rng, func(data []byte) error {
		cr := TimezoneResponse{}
		if err := json.Unmarshal(data, &cr); err != nil {
			return err
		}
		resp = append(resp, cr)
		return nil
	})

	if err == nil && len(resp) != 0 && policy.Valid(time.Now(), resp[0].When()) {
		return resp, nil
	} else if err != nil {
		c.logger.Printf("WARNING - query error for countries: %v", err)
	}

	// Either the data is not available or it has expired.
	rQ := TimezoneResponse{}
	if err := c.fballc.Get(ctx, endpoint, &rQ, params); err != nil {
		// We tolerate stale data if the api call fails. We still log it.
		if len(resp) != 0 {
			c.logger.Printf("WARNING - unable to query countries: %v.", err)
			c.logger.Printf("WARNING - returning stale data for countries.")
			return resp, nil
		} else {
			return nil, err
		}
	}

	if err := c.handle.Insert(ctx, endpoint, rQ, params); err != nil {
		c.logger.Printf("ERROR - unable to write country to cache: %v", err)
	}

	return []TimezoneResponse{rQ}, nil
}

func (c Corpus) getCountryResponse(
	ctx context.Context, endpoint string, max int, rng Range, policy refreshPolicy,
	params URLQueryStringer) ([]CountryResponse, error) {
	// Query the countries from the database.
	resp := []CountryResponse{}
	err := c.handle.Query(ctx, endpoint, params, max, rng, func(data []byte) error {
		cr := CountryResponse{}
		if err := json.Unmarshal(data, &cr); err != nil {
			return err
		}
		resp = append(resp, cr)
		return nil
	})

	if err == nil && len(resp) != 0 && policy.Valid(time.Now(), resp[0].When()) {
		return resp, nil
	} else if err != nil {
		c.logger.Printf("WARNING - query error for countries: %v", err)
	}

	// Either the data is not available or it has expired.
	rQ := CountryResponse{}
	if err := c.fballc.Get(ctx, endpoint, &rQ, params); err != nil {
		// We tolerate stale data if the api call fails. We still log it.
		if len(resp) != 0 {
			c.logger.Printf("WARNING - unable to query countries: %v.", err)
			c.logger.Printf("WARNING - returning stale data for countries.")
			return resp, nil
		} else {
			return nil, err
		}
	}

	if err := c.handle.Insert(ctx, endpoint, rQ, params); err != nil {
		c.logger.Printf("ERROR - unable to write country to cache: %v", err)
	}

	return []CountryResponse{rQ}, nil
}
